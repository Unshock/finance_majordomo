# Generated by Django 4.2 on 2023-10-30 18:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creation_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "asset_type",
                    models.CharField(
                        choices=[
                            ("stocks", "stocks"),
                            ("bonds", "bonds"),
                            ("currencies", "currencies"),
                            ("funds", "funds"),
                        ],
                        max_length=20,
                        verbose_name="Тип актива",
                    ),
                ),
                (
                    "secid",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="ID инструмента"
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Имя акции")),
                (
                    "isin",
                    models.CharField(
                        blank=True, max_length=100, unique=True, verbose_name="ISIN"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Валюта номинала"
                    ),
                ),
                (
                    "issuedate",
                    models.DateField(blank=True, verbose_name="Дата начала торгов"),
                ),
                (
                    "latname",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Английское наименование",
                    ),
                ),
                (
                    "isqualifiedinvestors",
                    models.BooleanField(
                        blank=True,
                        verbose_name="Бумаги для квалифицированных инвесторов",
                    ),
                ),
                (
                    "morningsession",
                    models.BooleanField(
                        blank=True,
                        verbose_name="Допуск к утренней дополнительной торговой сессии",
                    ),
                ),
                (
                    "eveningsession",
                    models.BooleanField(
                        blank=True,
                        verbose_name="Допуск к вечерней дополнительной торговой сессии",
                    ),
                ),
                (
                    "typename",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Вид/категория ценной бумаги",
                    ),
                ),
                (
                    "group",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Код типа инструмента"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Тип бумаги"
                    ),
                ),
                (
                    "groupname",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Тип инструмента"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AssetOfPortfolio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Объекты портфеля",
                "verbose_name_plural": "Объекты портфеля",
                "ordering": ["portfolio"],
            },
        ),
        migrations.CreateModel(
            name="AssetsHistoricalData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tradedate", models.DateField()),
                ("numtrades", models.IntegerField(null=True)),
                (
                    "value",
                    models.DecimalField(decimal_places=2, max_digits=15, null=True),
                ),
                (
                    "open",
                    models.DecimalField(decimal_places=5, max_digits=13, null=True),
                ),
                (
                    "low",
                    models.DecimalField(decimal_places=5, max_digits=13, null=True),
                ),
                (
                    "high",
                    models.DecimalField(decimal_places=5, max_digits=13, null=True),
                ),
                (
                    "legalcloseprice",
                    models.DecimalField(decimal_places=5, max_digits=13),
                ),
                (
                    "waprice",
                    models.DecimalField(decimal_places=5, max_digits=13, null=True),
                ),
                (
                    "close",
                    models.DecimalField(decimal_places=5, max_digits=13, null=True),
                ),
                ("volume", models.IntegerField(null=True)),
                (
                    "waval",
                    models.DecimalField(decimal_places=5, max_digits=13, null=True),
                ),
                (
                    "trendclspr",
                    models.DecimalField(decimal_places=3, max_digits=7, null=True),
                ),
                (
                    "couponpercent",
                    models.DecimalField(decimal_places=5, max_digits=13, null=True),
                ),
                (
                    "couponvalue",
                    models.DecimalField(decimal_places=5, max_digits=13, null=True),
                ),
                (
                    "yieldclose",
                    models.DecimalField(decimal_places=5, max_digits=13, null=True),
                ),
                ("is_closed", models.BooleanField()),
                ("update_time", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="AssetsOfUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Активы пользователя",
                "verbose_name_plural": "Активы пользователей",
                "ordering": ["user"],
            },
        ),
        migrations.CreateModel(
            name="BondOfUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Облигации пользователя",
                "verbose_name_plural": "Облигации пользователей",
                "ordering": ["bond"],
            },
        ),
        migrations.CreateModel(
            name="ProdCalendar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(max_length=10, verbose_name="Дата")),
                (
                    "date_status",
                    models.CharField(
                        choices=[("0", "Working"), ("1", "Nonworking")],
                        max_length=10,
                        verbose_name="Статус дня",
                    ),
                ),
            ],
            options={
                "ordering": ["date", "date_status"],
            },
        ),
        migrations.CreateModel(
            name="StocksOfUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Акции пользователя",
                "verbose_name_plural": "Акции пользователей",
                "ordering": ["stock"],
            },
        ),
        migrations.CreateModel(
            name="Bond",
            fields=[
                (
                    "asset_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="stocks.asset",
                    ),
                ),
                (
                    "startdatemoex",
                    models.DateField(
                        blank=True, verbose_name="Дата начала торгов на MOEX"
                    ),
                ),
                (
                    "buybackdate",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата байбека"
                    ),
                ),
                (
                    "matdate",
                    models.DateField(blank=True, verbose_name="Дата погашения"),
                ),
                (
                    "couponpercent",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=10,
                        verbose_name="Текущий процент",
                    ),
                ),
                (
                    "couponfrequency",
                    models.IntegerField(
                        blank=True, verbose_name="Частота выплаты купона в год"
                    ),
                ),
                (
                    "couponvalue",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=10,
                        verbose_name="Текущий купон",
                    ),
                ),
                (
                    "days_to_redemption",
                    models.IntegerField(blank=True, verbose_name="Дней до погашения"),
                ),
                (
                    "latest_coupon_update",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Дата последнего обновления информации о купонах",
                    ),
                ),
            ],
            options={
                "verbose_name": "Облигация",
                "verbose_name_plural": "Облигации",
                "ordering": ["creation_date", "secid", "name"],
            },
            bases=("stocks.asset",),
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "asset_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="stocks.asset",
                    ),
                ),
                (
                    "latest_dividend_update",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Дата последнего обновления информации о дивидендах",
                    ),
                ),
            ],
            options={
                "verbose_name": "Акция",
                "verbose_name_plural": "Акции",
                "ordering": ["creation_date", "secid", "name"],
            },
            bases=("stocks.asset",),
        ),
    ]
